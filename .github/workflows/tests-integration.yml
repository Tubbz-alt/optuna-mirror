name: Tests (Integration)

on:
  push:
    branches:
      - master
  pull_request: {}
  schedule:
    - cron: '0 23 * * SUN-THU'

jobs:
  tests-integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    # Not intended for forks.
    if: github.repository == 'optuna/optuna'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test-integration
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[tests]

        if [ ${{ matrix.python-version }} = 3.9  ]; then
            pip install --progress-bar off .[integration]
        else
            pip install --progress-bar off .[integration] -f https://download.pytorch.org/whl/torch_stable.html
        fi

    - name: Tests
      run: |
        # TODO (crcrpar): Run more tests with Python3.9.
        # ref: https://github.com/optuna/optuna/issues/2034
        if [ ${{ matrix.python-version }} = 3.9 ]; then
          pytest tests/integration_tests \
            --ignore tests/integration_tests/allennlp_tests/test_allennlp.py \
            --ignore tests/integration_tests/test_catalyst.py \
            --ignore tests/integration_tests/test_chainer.py \
            --ignore tests/integration_tests/test_chainermn.py \
            --ignore tests/integration_tests/test_cma.py \
            --ignore tests/integration_tests/test_fastai.py \
            --ignore tests/integration_tests/test_keras.py \
            --ignore tests/integration_tests/test_mxnet.py \
            --ignore tests/integration_tests/test_pytorch_ignite.py \
            --ignore tests/integration_tests/test_pytorch_lightning.py \
            --ignore tests/integration_tests/test_sampler.py \
            --ignore tests/integration_tests/test_skopt.py \
            --ignore tests/integration_tests/test_skorch.py \
            --ignore tests/integration_tests/test_tensorboard.py \
            --ignore tests/integration_tests/test_tensorflow.py \
            --ignore tests/integration_tests/test_tfkeras.py
        elif [ ${{ matrix.python-version }} = 3.8 ]; then
          pytest tests/integration_tests \
            --ignore tests/integration_tests/test_fastai.py \
            --ignore tests/integration_tests/allennlp_tests/test_allennlp.py
        else
          # pytest cannot collect allennlp tests with allennlp==1.0.0.
          pytest -s tests/integration_tests
        fi

    - name: Tests MPI
      if: ${{ matrix.python-version != 3.9 }}
      run: |
        mpirun -n 2 -- pytest tests/integration_tests/test_chainermn.py
      env:
        OMP_NUM_THREADS: 1
